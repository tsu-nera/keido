<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TOC on Keido</title><link>https://keido.site/tags/TOC/</link><description>Recent content in TOC on Keido</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://keido.site/tags/TOC/index.xml" rel="self" type="application/rss+xml"/><item><title>📁ソフトウェア工学(Software Engineering)</title><link>https://keido.site/notes/20220311194105/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220311194105/</guid><description>ソフトウェア工学, エンジニアリング全般.
コンピュータサイエンスに関わるものは 計算機科学 を参照.
📂ソフトウェア設計 📂ソフトウェア開発 📂ソフトウェアドメイン up: 🎓Keido HOME</description></item><item><title>📁プログラミングパラダイム</title><link>https://keido.site/notes/20220116193313/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220116193313/</guid><description>up: 📂Computer Science
プログラミングパラダイムについて.
具体的には CTMCP で扱うような分野のまとめ.
📝宣言型プログラミング(Declarative Programming) 📝命令形プログラミング 📝手続き型プログラミング 📝関数型プログラミング 📝オブジェクト指向プログラミング 📝イベント駆動プログラミング 📝フロー駆動型プログラミング 📝データ指向プログラミング 📝並行プログラミング Deterministic Dataflow Programming Multi-agent Dataflow Programmming 📝契約プログラミング(Contract Programming) 📚コンピュータプログラミングの概念・技法・モデル References https://github.com/tsu-nera/futurismo/tree/main/wiki/src/programming/paradiums プログラミングパラダイム - Wikipedia Classification of the principal programming paradigms 🖊プログラミングの世界観を変える衝撃！Paradigms of Computer Programmingで震えるほどの知的感動を体験した | Futurismo</description></item><item><title>📁勉強記録</title><link>https://keido.site/notes/20211231162342/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20211231162342/</guid><description>Articles 💻What I Worked On - Paul Graham(2022) 💻講義の動画を倍速で視聴しても内容はちゃんと頭に入るのか？問題 - パレオな男(2022) 💻How I note - AlexeyShmalko(2020) 💻GTDを噛み砕く - 吉良野すた(2020) Books 📂Clojure Books 📚Software design for flexibility - Hanson, C., &amp;amp; Sussman, G. J.(2021) 📚実践Common Lisp - Peter Seibel(2008) 📚Land of Lisp - Conrad Barski(2013) 📚ブチ抜く力 - 与沢翼(2019) 📝ストレスフリーの仕事術 - デビッド・アレン(2006) 📝ひとつ上のGTD ストレスフリーの整理術 実践編 - デビッド・アレン(2010) Talks 🎤【ショート動画時代】YouTubeShorts vs TikTok vs Reels…メディアの次の覇権を担うのは一体どれだ？ - 中田敦彦(2022-01-01) 🎤【Z世代】世界を激変させるニュージェネレーション！Z世代の価値観を徹底解説 - 中田敦彦(2021-12-11) 🎤A History of Clojure by Rich Hickey with Q&amp;amp;A - V.</description></item><item><title>📂Clojure Core Languages</title><link>https://keido.site/notes/20220112142936/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220112142936/</guid><description>Clojureの言語仕様まとめ. clojure.coreとその他.
📝Clojure Syntax 📝Clojure Collections and Sequences 📝Clojure Namespaces 📝Clojure Logics 📝Clojure Flows 📝Clojure Functional Programming 📝Clojure State and Concurrency 📝Clojure Java Interop 📝Clojure Async 📝Clojure Expression Problem 📝Clojure Macros 📝Clojure Idioms 📝Clojure File I/O 📝Clojure Date/Time/Timestamp 📝Clojure Spec up: 📂Clojure tags: 🏷Clojure</description></item><item><title>📂Clojure開発</title><link>https://keido.site/notes/20220211141917/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220211141917/</guid><description>Clojure開発のあれこれまとめ.
📝Clojure Product Development 📝Clojure Development Tips 📝Clojure Style Rules &amp;amp; Conventions 📝Clojure Web Development 📝Clojure API Server Development 📝Clojure API Client Development 📝Twitter App Development with Clojure 📝Clojure DX(Developer Experience) 📝Clojure REPL Driven Development 📝Clojure 開発環境 with Emacs 📝Clojure デバッグ 📝Clojure Architecture up: 📂Clojure tags: 🏷Clojure</description></item><item><title>📂Startup</title><link>https://keido.site/notes/20220301073957/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220301073957/</guid><description>refs: 🏛Startup 🔬Startup Ideas
📝Startup Online Courses 🖊Steve Blank来日記念セミナー2019感想 | Futurismo 🏷Founder</description></item><item><title>📂ソフトウェア設計(Software Design)</title><link>https://keido.site/notes/20220220102258/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220220102258/</guid><description>📝デザインパターン 📝ソフトウェアアーキテクチャ概論 📝クリーンアーキテクチャ 📝Dependency Ingection 📝Declarative Domain Modeling 📝組み込みシステムパターン 📝システム制御パターン Architecture Pattern Concurrent Pattern Design Prinsiple ref: https://github.com/tsu-nera/futurismo/tree/main/wiki/src/programming/design
up: 📂プロダクト開発</description></item><item><title>📂ソフトウェア開発</title><link>https://keido.site/notes/20220215162439/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220215162439/</guid><description>ref: 📂プログラミング up: 📁ソフトウェア工学
🏷ソフトウェア開発手法 🏷Web Development 🏷個人開発 📝ソフトウェア開発環境(IDE) 📝コーディング規約概論 📝命名規約概論 📝Date/Time/Timestamp概論 🏷Emacs 📝git 📝adb 📂Twitter Development 📝DMM Development</description></item><item><title>📂ソフトウェア開発ドメイン</title><link>https://keido.site/notes/20220220102738/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220220102738/</guid><description>📝Web開発概論 📝組込みソフト開発 📝Google Cloud 📝Google APIs 📝Docker データベース 🏷RDB 🏷NoSQL 🏷Firebase 📝通信プロトコル(Communication protocol) up: 📂Software Development
ref: https://github.com/tsu-nera/futurismo/tree/main/wiki/src/programming/domains</description></item><item><title>📂プログラミング</title><link>https://keido.site/notes/20220214050656/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220214050656/</guid><description>refs: 📂ソフトウェア開発 📂Computer Science
📝プログラミングエッセイまとめ 🏷Emacs 🏷プログラマ 🏷プログラミングモチベ 🏷プログラミング言語 🏷Lisp 🏷JVM 🏷プログラミング言語設計思想 ref: https://github.com/tsu-nera/futurismo/tree/main/wiki/src/programming</description></item><item><title>📂プログラミング言語処理系</title><link>https://keido.site/notes/20220214050517/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220214050517/</guid><description>refs: 📂Programming 📂Computer Science
SICPや nand2tetrisで扱う分野をまとめる.
📝プログラミング: 基礎概念 📝プログラミング: 型システム 📝プログラミング: データ構造 📝プログラミング: 意味論 📝プログラミング: ポリモーフィズム 📝プログラミング: コンパイラ 📝プログラミング: 用語集 References ハードウェアの仕組みを学ぶ！coursera で From Nand To Tetris Part1 を受けた | Futurismo SICP 手続きによる抽象の構築を読んだ | Futurismo SICP 第 2 章 データによる抽象の構築を読んだ | Futurismo</description></item><item><title>📂先祖代々の歴史</title><link>https://keido.site/notes/20220217172324/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220217172324/</guid><description>📝宇土為光 📝菊池氏族原田家 📝原田孫七郎 📝原田喜右衛門 📝薩摩藩姶良郡蒲生町 📝西郷隆盛 📝東條英機 up: 📂虚無との戦い</description></item><item><title>📂計算機科学(Computer Science)</title><link>https://keido.site/notes/20220307090518/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220307090518/</guid><description>計算機科学, 情報科学, コンピュータサイエンス, IT(Infomation Technology).
ソフトウェアエンジニアリングに関わるものは ソフトウェア工学 を参照.
📂プログラミング 📂プログラミング言語処理系 📂プログラミングパラダイム up: 🎓KEIDO HOME</description></item><item><title>📂音楽</title><link>https://keido.site/notes/20220309205225/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220309205225/</guid><description> 📝初音ミク 📝ベートーヴェン 📝許光俊 🏷作曲家 🏷クラシック音楽</description></item><item><title>📝Google Cloud Platform</title><link>https://keido.site/notes/20220311153749/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220311153749/</guid><description>Googleの提供するクラウドサービス群の総称, 略してGCP.
Firebase は Google Cloudのなかで特にアプリケーション開発に使うものをパッケージングして名前をつけたもの.
📝Google Cloud Firestore 📝Google Cloud Shell up: 📂ソフトウェア開発ドメイン</description></item><item><title>Index of Clojure</title><link>https://keido.site/notes/20220214041907/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220214041907/</guid><description>Clojureについて.
tags: 🏷Lisp 🏷JVM 🏷Clojure
📂Clojure Core Languages 📂Clojure Development 📂Clojure Books</description></item><item><title>Index of Twitter Development</title><link>https://keido.site/notes/20220322081948/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220322081948/</guid><description>refs: 🏷Twitter 🏷Development
📝Twitter API 📝Twitter Scraping 📝Twitter Private API 📝Twitter Technologies 📝Twitter Development with Clojure</description></item><item><title>Index of 心理学</title><link>https://keido.site/notes/20220327060450/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220327060450/</guid><description>📝コンフォートゾーン 📝自己肯定感 up: 🎓Keido HOME</description></item><item><title>Index of 文学</title><link>https://keido.site/notes/20220327055651/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220327055651/</guid><description>📝神曲 - ダンテ 📂落語 up: 🎓Keido HOME</description></item><item><title>Index of 食事</title><link>https://keido.site/notes/20220120031935/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220120031935/</guid><description> 📝パレオさんの食事についての情報まとめ</description></item><item><title>🏷落語</title><link>https://keido.site/notes/20211211072935/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20211211072935/</guid><description> 🏷落語家 👨立川談志 👨立川志らく 📝小咄集</description></item><item><title>🦊虚無との戦い</title><link>https://keido.site/notes/20220128151558/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://keido.site/notes/20220128151558/</guid><description>暇なときにコツコツ復活させたい.
https://github.com/tsu-nera/futurismo/tree/main/wiki/src
Wiki 📂先祖代々の歴史 📝DarkHorse Zettelkasten 🏛経道とは 🏛DarkHorse</description></item></channel></rss>